//
//  OnboardingViewModel.swift
//  ToneDown
//
//  Created by Dyuven on 10.08.2025.
//

import SwiftUI
import Combine

// MARK: - Onboarding ViewModel
@MainActor
class OnboardingViewModel: ObservableObject {
    // MARK: - Published Properties
    @Published var currentPage = 0
    @Published var isButtonPressed = false
    
    // MARK: - Dependencies
    private let appState: AppState
    
    // MARK: - Constants
    let pages = [
        OnboardingPage(
            emoji: "üì±",
            title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ToneDown",
            description: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤–∞—à–µ–º iPhone"
        ),
        OnboardingPage(
            emoji: "üé®",
            title: "–°–µ—Ä—ã–π —Ä–µ–∂–∏–º",
            description: "–£–º–µ–Ω—å—à–∞–µ—Ç –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–µ —Ü–≤–µ—Ç–∞ –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –≤–∞–∂–Ω–æ–º"
        ),
        OnboardingPage(
            emoji: "üß†",
            title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
            description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç —Å–µ—Ä—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
        ),
        OnboardingPage(
            emoji: "‚ö°",
            title: "–ü—Ä–æ—Å—Ç–æ—Ç–∞",
            description: "–û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞"
        )
    ]
    
    // MARK: - Computed Properties
    var totalPages: Int {
        pages.count
    }
    
    var isLastPage: Bool {
        currentPage == totalPages - 1
    }
    
    var canGoNext: Bool {
        currentPage < totalPages - 1
    }
    
    var progress: Double {
        Double(currentPage + 1) / Double(totalPages)
    }
    
    var buttonTitle: String {
        isLastPage ? "–ù–∞—á–∞—Ç—å" : "–î–∞–ª–µ–µ"
    }
    
    var currentPageData: OnboardingPage {
        pages[currentPage]
    }
    
    // MARK: - Initialization
    init(appState: AppState) {
        self.appState = appState
    }
    
    // MARK: - Public Methods
    
    /// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    func nextPage() {
        guard canGoNext else { return }
        
        withAnimation(.spring()) {
            currentPage += 1
        }
        
        // Haptic feedback
        UIImpactFeedbackGenerator(style: .light).impactOccurred()
    }
    
    /// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    func completeOnboarding() {
        appState.completeOnboarding()
        
        // Haptic feedback
        UIImpactFeedbackGenerator(style: .medium).impactOccurred()
    }
    
    /// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    func goToPage(_ page: Int) {
        guard page >= 0 && page < totalPages else { return }
        
        withAnimation(.spring()) {
            currentPage = page
        }
    }
    
    /// –°–±—Ä–æ—Å –∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    func resetToFirstPage() {
        withAnimation(.spring()) {
            currentPage = 0
        }
    }
    
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    func onButtonPress() {
        isButtonPressed = true
    }
    
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    func onButtonRelease() {
        isButtonPressed = false
    }
    
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–∞
    func handleSwipe(_ direction: SwipeDirection) {
        switch direction {
        case .left:
            nextPage()
        case .right:
            if currentPage > 0 {
                goToPage(currentPage - 1)
            }
        }
    }
}

// MARK: - Onboarding Page Model
struct OnboardingPage {
    let emoji: String
    let title: String
    let description: String
}

// MARK: - Swipe Direction
enum SwipeDirection {
    case left
    case right
}
