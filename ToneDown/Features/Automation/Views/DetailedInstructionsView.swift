//
//  DetailedInstructionsView.swift
//  ToneDown
//
//  Created by Dyuven on 10.08.2025.
//

import SwiftUI

// MARK: - Detailed Instructions View
struct DetailedInstructionsView: View {
    @Environment(\.dismiss) private var dismiss
    
    private let instructions = [
        InstructionStep(
            number: 1,
            title: "–ö–æ–º–∞–Ω–¥—ã —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã",
            description: "–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ö–æ–º–∞–Ω–¥—ã"
        ),
        InstructionStep(
            number: 2,
            title: "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ö–æ–º–∞–Ω–¥—ã",
            description: "–ù–∞–π–¥–∏—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ö–æ–º–∞–Ω–¥—ã –Ω–∞ –≤–∞—à–µ–º iPhone"
        ),
        InstructionStep(
            number: 3,
            title: "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é (–≤–∫–ª—é—á–µ–Ω–∏–µ)",
            description: "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ '+' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é'"
        ),
        InstructionStep(
            number: 4,
            title: "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'",
            description: "–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'"
        ),
        InstructionStep(
            number: 5,
            title: "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è'",
            description: "–í—ã–±–µ—Ä–∏—Ç–µ –í–°–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (Instagram, TikTok, YouTube –∏ —Ç.–¥.) –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è'"
        ),
        InstructionStep(
            number: 6,
            title: "–î–æ–±–∞–≤—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É'",
            description: "–ù–∞–∂–º–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ' –∏ –Ω–∞–π–¥–∏—Ç–µ '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É'"
        ),
        InstructionStep(
            number: 7,
            title: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É 'Grayscale On'",
            description: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É 'Grayscale On' (–≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞) –∏–∑ —Å–ø–∏—Å–∫–∞"
        ),
        InstructionStep(
            number: 8,
            title: "–û—Ç–∫–ª—é—á–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ",
            description: "–û—Ç–∫–ª—é—á–∏—Ç–µ '–°–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º' –∏ –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'"
        ),
        InstructionStep(
            number: 9,
            title: "–°–æ–∑–¥–∞–π—Ç–µ –≤—Ç–æ—Ä—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é (–≤—ã–∫–ª—é—á–µ–Ω–∏–µ)",
            description: "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —à–∞–≥–∏ 3-8, –Ω–æ –≤—ã–±–µ—Ä–∏—Ç–µ '–ó–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è', –∫–æ–º–∞–Ω–¥—É 'Grayscale Off' –∏ —Ç–µ –∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        ),
        InstructionStep(
            number: 10,
            title: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É",
            description: "–û—Ç–∫—Ä–æ–π—Ç–µ –∏ –∑–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - —Å–µ—Ä—ã–π —Ä–µ–∂–∏–º –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å—Å—è –∏ –≤—ã–∫–ª—é—á–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        )
    ]
    
    var body: some View {
        NavigationView {
            ScrollView {
                VStack(spacing: 24) {
                    // Header
                    VStack(spacing: 12) {
                        Text("üìã")
                            .font(.system(size: 48))
                        Text("–ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
                            .font(.title.weight(.bold))
                        Text("–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
                            .font(.body)
                            .foregroundColor(.secondary)
                            .multilineTextAlignment(.center)
                    }
                    .padding(.top, 20)
                    
                    // Instructions list
                    VStack(spacing: 16) {
                        ForEach(instructions, id: \.number) { instruction in
                            InstructionRow(instruction: instruction)
                        }
                    }
                    .padding(.horizontal, 20)
                    
                    // Tips section
                    VStack(spacing: 16) {
                        Text("üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã")
                            .font(.title3.weight(.semibold))
                        
                        VStack(alignment: .leading, spacing: 12) {
                            TipRow(
                                icon: "checkmark.circle.fill",
                                text: "–î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –î–í–ï –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
                                color: .green
                            )
                            TipRow(
                                icon: "info.circle.fill",
                                text: "–í—ã–±–µ—Ä–∏—Ç–µ –í–°–ï –Ω—É–∂–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å—Ä–∞–∑—É –≤ –ø–µ—Ä–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
                                color: .blue
                            )
                            TipRow(
                                icon: "checkmark.circle.fill",
                                text: "–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
                                color: .green
                            )
                            TipRow(
                                icon: "lightbulb.fill",
                                text: "–í –æ–±–µ–∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                                color: .purple
                            )
                        }
                        .padding(.vertical, 16)
                        .padding(.horizontal, 20)
                        .background(
                            RoundedRectangle(cornerRadius: 16, style: .continuous)
                                .fill(.ultraThinMaterial)
                        )
                        .padding(.horizontal, 20)
                    }
                    
                    Spacer(minLength: 40)
                }
            }
            .navigationTitle("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
            .navigationBarTitleDisplayMode(.inline)
            .navigationBarItems(trailing: Button("–ì–æ—Ç–æ–≤–æ") {
                dismiss()
            })
        }
    }
}

// MARK: - Instruction Row
struct InstructionRow: View {
    let instruction: InstructionStep
    
    var body: some View {
        HStack(spacing: 16) {
            ZStack {
                Circle()
                    .fill(DS.Color.accent)
                    .frame(width: 32, height: 32)
                
                Text("\(instruction.number)")
                    .font(.subheadline.weight(.bold))
                    .foregroundColor(.white)
            }
            
            VStack(alignment: .leading, spacing: 4) {
                Text(instruction.title)
                    .font(.subheadline.weight(.semibold))
                    .foregroundColor(.primary)
                
                Text(instruction.description)
                    .font(.caption)
                    .foregroundColor(.secondary)
                    .lineLimit(3)
            }
            
            Spacer()
        }
        .padding(.vertical, 12)
        .padding(.horizontal, 16)
        .background(
            RoundedRectangle(cornerRadius: 12, style: .continuous)
                .fill(.ultraThinMaterial)
        )
    }
}

// MARK: - Tip Row
struct TipRow: View {
    let icon: String
    let text: String
    let color: Color
    
    var body: some View {
        HStack(spacing: 12) {
            Image(systemName: icon)
                .font(.subheadline)
                .foregroundColor(color)
            
            Text(text)
                .font(.subheadline)
                .foregroundColor(.primary)
            
            Spacer()
        }
    }
}

// MARK: - Instruction Step Model
struct InstructionStep {
    let number: Int
    let title: String
    let description: String
}

#Preview {
    DetailedInstructionsView()
}
